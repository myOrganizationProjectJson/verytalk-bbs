
<div id="jqdata"></div>
<table class="tb tb2 ">
	<tbody>
		
		<tr>
			<td colspan="15" style="border-top:0;">
			 <div class="monitorchart" id="container"></div>
			</td>
		</tr>
		
	</tbody>
</table>

<table class="tb tb2 ">
	<tbody>
		<tr>
			<th colspan="15" class="partition" id="keywordradiowrap">
			</th>
		</tr>
	</tbody>
</table>						

<div id="keywordlistwrap"><div style="padding:20px 0;text-align:center;"><img src="static/image/admincp/ajax_loader.gif" /></div></div>
<script id="keywordradiotpl" type="text/html">
<% for(var i=0; i < keywordlist.length; i++){ %>
<input type="radio" name="keywordid" id="keyword_<%=keywordlist[i].keywordid%>" onclick="getChangeline(<%=keywordlist[i].keywordid%>)" <%if(i==0){%>checked="checked"<%}%> value="<%=keywordlist[i].keywordid%>" /> <label for="keyword_<%=keywordlist[i].keywordid%>"><%=keywordlist[i].keyword%></label> 
<% } %>
</script>
<script id="single24hourstpl" type="text/html">
	<td colspan="1">
		<div class="text">            
			<p><strong class="large blue3"><%=keyword %></strong></p>
			<p>{lang chaoji_com:latest_update}<%=formatupdatetime(lastupdate)%></p>
			<p>{lang chaoji_com:highest}{lang chaoji_com:maohao}<span class="orange"><%=formathighest(highestrank)%></span></p>
			<p><a class="notrend_map" href="http://www.chaoji.com/client.aspx#client_a" target="_blank">{lang chaoji_com:keyword3}</a></p>
		</div>
	</td>
	<td colspan="7" id="container<%=keywordid%><%=date1%>">
		
	</td>
</script>
<script id="keywordlisttpl" type="text/html">
<% for(var i=0; i < keywordlist.length; i++){ %>
<table class="tb tb2 keyworditem borB" id="keyworditem<%=keywordlist[i].keywordid%>">
	<tbody>
		<tr>
			<th colspan="7" class="partition"><a href="javascript:void(0);" onclick="returnlist(this);return false;" class="return" style="float:right;display:none;"><img src="source/plugin/chaoji_com/resource/images/back.gif" /> {lang chaoji_com:backlist}</a>{lang chaoji_com:keyword}:<a href="javascript:void(0);" onclick="getChangeline(<%=keywordlist[i].keywordid%>);return false;"><%=keywordlist[i].keyword %></a></th>
		</tr>
		<colgroup><col style="width:100px;">
                        <col>
                        <col>
                        <col>
                        <col>
                                                                         </colgroup>
		<tr class="header">
			<th>{lang chaoji_com:report8_1}</th>
			<th class="tc">{lang chaoji_com:baidu_index}</th>
			<th class="tc">{lang chaoji_com:baidurank}</th>
			<th class="tc">{lang chaoji_com:bidding_num}</th>
			<th class="tc">{lang chaoji_com:natural_rank}</th>
			<th class="tc">{lang chaoji_com:googlerank}</th>
			<th class="tc" style="position:relative; width:130px;">{lang chaoji_com:day_trend} <div class="unknown_box" id="unknown_pos" style="left:97px;">
									<span class="unknown">?</span>
									<span class="unknown_icon"></span>
									<div class="unknown_main">
										<p>{lang chaoji_com:unknown1}</p>
									</div>	
								</div>
</th>
		</tr>
		<% for(var j=0; j<keywordlist[i].createdates.length; j++){ %>
		<tr class="hover keyword-summary" <% if(j % 2 == 1){ %><% }else{ %>style="background-color:#FBFAF8;"<% } %>>
			<td><%=#formatweek(keywordlist[i].createdates[j])%></td>
			<td class="tc"><%=#chaoji_render_data(keywordlist[i].createdates[j], currentdate, formatrank(keywordlist[i].datalist[0].datas[j]), "http://index.baidu.com/main/word.php?word=" + keywordlist[i].keyword)%></td>
			<td class="tc"><%=formatrank(keywordlist[i].datalist[1].datas[j])%></td>
			<td class="tc"><%=formatrank(keywordlist[i].datalist[2].datas[j])%></td>
			<td class="tc"><%=#chaoji_render_data(keywordlist[i].createdates[j], currentdate, formatrank(keywordlist[i].datalist[3].datas[j]), "http://www.baidu.com/s?wd=" + keywordlist[i].keyword + "&rn=100")%></td>
			<td class="tc"><%=#chaoji_render_data(keywordlist[i].createdates[j], currentdate, formatrank(keywordlist[i].datalist[4].datas[j]), "http://www.google.com.hk/search?q=" + keywordlist[i].keyword + "&hl=zh-CN&newwindow=1&start=0")%></td>
			<td class="tc"><%=#ranktrend(keywordlist[i].keywordid, keywordlist[i].keyword, keywordlist[i].createdates[j], keywordlist[i].datalist[3].trends[j])%></td>
		</tr>	
		<tr class="keyword-detail" <% if(j % 2 == 1){ %><% }else{ %>style="background-color:#FBFAF8;"<% } %> id="keyword-detail-wrap<%=keywordlist[i].keywordid%><%=keywordlist[i].createdates[j]%>">
		
	</tr>
		<% } %>
	</tbody>
</table>
<% } %>
</script>
<script type="text/javascript">
template.helper('chaoji_render_data', function(date1, date2, val, link){
	if(date1 == date2){
		return '<a href="' + link + '" target="_blank">' + val + '</a>';
	}else{
		return val;
	}
});
template.helper('formathighest', function(val){
	if(val == '-1'){
		return '--';
	}else if(val == '-2'){
		return '100+';
	}else{
		return val;
	}
});
template.helper('formatweek', function(date){
	var w = new Date(date.replace(/-/g, "/")).getDay();
	if(w == '0' || w == '6'){
		return '<span class="red">' + date + '</span>';
	}
	return date;
});
template.helper('formatupdatetime', function(date){
	var d = new Date(date);
	var hour = d.getHours();
	var minute = d.getMinutes();
	var second = d.getSeconds();
	if(hour < 10) hour = '0' + hour;
	if(minute < 10) minute = '0' + minute;
	if(second < 10) second = '0' + second;
	return hour + ':' + minute + ':' + second;
});
template.helper('formatrank', function(val){
	if(val == '-1'){
		return '--';
	}else if(val == '-2'){
		return '100+';
	}else{
		return val;
	}
});
template.helper('ranktrend', function(keywordid, keyword, date, trend){
	if(trend == 0){
		// 没变化
		return '<span class="unfold_no keyword1" title="{lang chaoji_com:24hoursno}" data-date="' + date + '" data-keywordid="' + keywordid + '" data-keyword="' + keyword + '" data-oldtrendclass="unfold_no" data-newtrendclass=""></span>';
	}else{
		// 有变化
		return '<span class="unfold_update keyword1" title="{lang chaoji_com:24hoursupdate}" data-date="' + date + '" data-keywordid="' + keywordid + '" data-keyword="' + keyword + '" data-oldtrendclass="unfold_update" data-newtrendclass=""></span>';
	}
});
var chart1; var cjDay = "{lang chaoji_com:text1}";
jq(function(){
	jq('.keyword1').live('click', function(){
		var _self = jq(this);
		chaojiapp_SetScrollBarTop(_self, 0);
		var date = _self.attr('data-date');
		var keywordid = _self.attr('data-keywordid');
		var keyword = _self.attr('data-keyword');
		var oldclass = _self.attr('data-oldtrendclass');
		var newclass = _self.attr('data-newtrendclass');
		var osiblings = _self.parent().parent().siblings('.keyword-detail');
		jq.each(osiblings, function(i, n){
			var n = jq(n);
			var childn = n.prev('.keyword-summary').children('td').children('.keyword1');
			childn.removeClass('unfold_show');
			childn.addClass(childn.attr('data-oldtrendclass'));
			childn.attr('data-newtrendclass', '');
			n.hide();
		});
		
		if(oldclass == newclass){
			_self.removeClass(newclass).addClass(oldclass);
			_self.attr('data-newtrendclass', '');
			jq('#keyword-detail-wrap' + keywordid + date).hide();
		}else{
			_self.attr('data-newtrendclass', oldclass);
			_self.removeClass(oldclass).addClass('unfold_show');
			jq('#keyword-detail-wrap' + keywordid + date).html('<td style="text-align:center;" colspan="7">{lang chaoji_com:loading2}</td>').show();
			
			jq.getJSON('{CJ_MONITOR_KEYWORD_TREND_URL}&formhash={FORMHASH}&begindate=' + date + '&keywordid=' + keywordid, {}, function(json){
				
				if(json.code != 0){
				}else{
					var data = json.data;
					data.date1 = date;
					var single24hourshtml = template('single24hourstpl', data);
					jq('#keyword-detail-wrap' + keywordid + date).html(single24hourshtml);
					
					var chart_categories = new Array;
					for(var i=0; i<24; i++){
						chart_categories.push(i + ':00');
					}
					var series = new Array;
					var seriesitem = {};
					seriesitem.name = data.datalist.name;
					seriesitem.data = data.datalist.datas;
					var extremes1 = test_get_min(seriesitem.data);
					series.push(seriesitem);
					jq('#container' + keywordid + date).highcharts({
						chart: {
							height: 150,
							defaultSeriesType: 'spline',
							backgroundColor:_self.parent('td').parent('tr').css('background-color')
						},
						credits: {
							enabled: false
						},
						title: {
							text: ''
						},
						xAxis: {
							categories: chart_categories,
							tickInterval:(chart_categories.length/7<1)?1:(parseInt(chart_categories.length/7)*2),
							labels: {
								style: {
									align: 'right',
									color: '#666',
									font: 'normal 12px {lang chaoji_com:songti}'
								},
								x: 10,
								y: 18
							}
						},
						yAxis: {
							min: extremes1.min,
							max: extremes1.max,
							tickInterval: extremes1.tickInterval,
							title: {
								text: ''
							},
							labels: {
								formatter: function () {
									if (this.value == 125) {
										return "100+";
									}
									else if (this.value == 150) {
										return "{lang chaoji_com:nodata2}";
									}
									return (this.value == 0) ? 1 : (this.value)
								},
								style: { font: 'normal 12px {lang chaoji_com:songti}', width: '20px' }
							},
							tickPixelInterval: 30,
							reversed: true
						},
						tooltip: {
							formatter: function () {
								var s = '{lang chaoji_com:keyword}\u3010' + keyword + '\u3011';

								jQuery.each(this.points, function (i, point) {
									var y = point.y;
									if (y == 125) {
										y = "100+";
									}
									else if (y == 150) {
										y = "{lang chaoji_com:nodata2}";
									}
									s += '<br/><span style="color:' + point.series.color + '">' + point.series.name + '</span>: ' + y;
								});
								s += '<br/>{lang chaoji_com:update_time}(<span style="color:red;">' + data.lastupdate + '</span>)';
								return s;
							},
							shared: true,
							crosshairs: true
						},

						legend: {
							enabled: false
						},

						series: series
					});					
					
				}
			});
			
		}
	});
});
</script>
<script type="text/javascript">
    var chart;var cjDay = "{lang chaoji_com:text1}";
    var serieItems;
    var itemname="";
    jq(document).ready(function () {
		jq.getJSON('{CJ_MONITOR_KEYWORD_URL}&formhash={FORMHASH}&begindate={$st}&enddate={$et}', function(json){
			var data = json.data;
				if(data.issearchday){
					jq('#searchday').html(data.typeinfo.historydays);
					jq('#searchdaywrap').show();
				}
				if(!data.typeinfo.isexport){
					jq('#exportlink').hide();
				}			
			if(data.keywordcount == '0'){
				jq('#cpform').remove();
				jq('#jqdata').remove();
				jq('#keywordlistwrap').prev('.tb2').remove();
				jq('#keywordlistwrap').html('<div class="data-rivalcompare">\
                    <div class="toolbar blank">\
                        <span class="item">{lang chaoji_com:no-keyword}</span>\
                        <a class="btn btn-add" href="#" data-type="add" onclick="open_dialog(this, \'{CJ_PLUGIN_URL}pmod=setting&op=edit_keywords&datatype=add\');return false;">{lang chaoji_com:add}{lang chaoji_com:keyword}</a>\
                    </div>\
                    </div>');
			}else{
				var keywordlist1 = template('keywordlisttpl', data);
				jq('#keywordlistwrap').html(keywordlist1);
				
				var keywordlist2 = template('keywordradiotpl', data);
				jq('#keywordradiowrap').html(keywordlist2);
				
				var trends = new Array;
				
				for(var i=0; i<data.keywordlist.length; i++){
					trends[data.keywordlist[i].keywordid] = data.keywordlist[i];
				}
				jq('#jqdata').data('trends', trends);
				var default_keywordid = jq('input[name="keywordid"]').val();
				
				var fact_data = trends[default_keywordid];
				
				var dates = fact_data.createdates;
				var newarr = new Array;
				for(var i=0; i < dates.length; i++){
					newarr[dates[i]] = [{'name':fact_data.datalist[3].name, 'data':chaoji_dataformat(fact_data.datalist[3].datas[i])}, {'name':fact_data.datalist[4].name, 'data':chaoji_dataformat(fact_data.datalist[4].datas[i])}, {'name':fact_data.datalist[0].name, 'data':chaoji_dataformat(fact_data.datalist[0].datas[i])}];
				}
				
				var reverse_arr = chaoji_array_reverse(newarr);
				
				var chart_categories = new Array;
				var chart_series = new Array;
				var temparr = new Array([],[],[]);
				var tempnamearr = new Array([],[],[]);
				for(key in reverse_arr){
					chart_categories.push(key);
					tempnamearr[0] = reverse_arr[key][0].name;
					temparr[0].push(reverse_arr[key][0].data);
					tempnamearr[1] = reverse_arr[key][1].name;
					temparr[1].push(reverse_arr[key][1].data);
					tempnamearr[2] = reverse_arr[key][2].name;
					temparr[2].push(reverse_arr[key][2].data);
				}
				var extremes = test_get_min(temparr[0]);
				var series = '';
				for(var j=0; j < temparr.length; j++){
					series += '{"name":"' + tempnamearr[j] + '", "marker":{"symbol":"circle"}, "data":[' + temparr[j].join(',') + ']},';
				}
				
				chart_series = eval('([' + series.substring(0, series.length - 1) + '])');			
				
				
				jq('#container').highcharts({
					chart: {
						height: 300,
						defaultSeriesType: 'spline'
					},
					credits: {
						enabled: false
					},
					title: {
						text: ''
					},
					xAxis: {
						categories: chart_categories,
						tickInterval:(chart_categories.length/7<1)?1:(parseInt(chart_categories.length/7)*2),
						labels: {
							style: {
								align: 'right',
								width: '80px',
								color: '#666',
								font: 'normal 12px {lang chaoji_com:songti}'
							},
							x: 10,
							y: 18
						}
					},
					yAxis: {
						min: extremes.min,
						max: extremes.max,
						tickInterval: extremes.tickInterval,
						title: {
							text: ''
						},
						labels: {
							formatter: function () {
								if (this.value == 125 && itemname != "{lang chaoji_com:baidu_index}") {
									return "100+";
								}
								else if (this.value == 150 && itemname != "{lang chaoji_com:baidu_index}") {
									return "{lang chaoji_com:nodata2}";
								}
								return this.value;
							},
							style: { font: 'normal 12px {lang chaoji_com:songti}' }
						},
						reversed: true
					},
					tooltip: {
						formatter: function () {
							var s = '<b>' + this.x + "({lang chaoji_com:week1}" + cjDay.charAt(new Date(this.x.toString().replace(/-/g, "/")).getDay()) + ")" + '</b>';
							jQuery.each(this.points, function (i, point) {
								var y = point.y;
								if (y == 125) {
									y = "{lang chaoji_com:nodata3}";
								}
								else if (y == 150) {
									y = "{lang chaoji_com:nodata2}";
								}
								s += '<br/><span style="color:' + point.series.color + '">' + point.series.name + '</span>: ' + y;
							});
							return s;
						},
						shared: true,
						crosshairs: true
					},
					legend: {
						layout: 'horizontal',
						align: 'center',
						verticalAlign: 'bottom',
						margin: 20,
						borderWidth: 1,
						legendItemClick:legendItemClick
					},
					series: chart_series
				});
				chart = jq('#container').highcharts();
				var length = chart.series.length;
				for (var i = 0; i < length; i++) {

					chart.series[i].hide();

				}
				chart.series[0].show();
			}
		});	
    });
	
    function getChangeline(targetid) {
        //writeCookie("chaoji_monitor_keyword_116615", targetid, 1);
		var obj = jq('#keyworditem' + targetid);
		obj.show();
		obj.children().find('.return').show();
		obj.children().find('.return').siblings('.return').hide();
		obj.siblings('.keyworditem').hide();
		var trends = jq('#jqdata').data('trends');
		
			var fact_data = trends[targetid];
			
			var dates = fact_data.createdates;
			var newarr = new Array;
			for(var i=0; i < dates.length; i++){
				newarr[dates[i]] = [{'name':fact_data.datalist[3].name, 'data':chaoji_dataformat(fact_data.datalist[3].datas[i])}, {'name':fact_data.datalist[4].name, 'data':chaoji_dataformat(fact_data.datalist[4].datas[i])}, {'name':fact_data.datalist[0].name, 'data':chaoji_dataformat(fact_data.datalist[0].datas[i])}];
			}
			
			var reverse_arr = chaoji_array_reverse(newarr);
			
			var chart_categories = new Array;
			var chart_series = new Array;
			var temparr = new Array([],[],[]);
			var tempnamearr = new Array([],[],[]);
			for(key in reverse_arr){
				chart_categories.push(key);
				tempnamearr[0] = reverse_arr[key][0].name;
				temparr[0].push(reverse_arr[key][0].data);
				tempnamearr[1] = reverse_arr[key][1].name;
				temparr[1].push(reverse_arr[key][1].data);
				tempnamearr[2] = reverse_arr[key][2].name;
				temparr[2].push(reverse_arr[key][2].data);
			}
			var series = '';
			for(var j=0; j < temparr.length; j++){
				series += '{"name":"' + tempnamearr[j] + '", "marker":{"symbol":"circle"}, "data":[' + temparr[j].join(',') + ']},';
			}
			
			chart_series = eval('([' + series.substring(0, series.length - 1) + '])');
			
			chart = jq('#container').highcharts();
			
			for (i = 0; i < chart_series.length; i++) {
            if (chart_series[i].data != "" && chart != null) {

                chart.series[i].setData(chart_series[i].data);
            }
        }

  
    }
	
	function returnlist(obj){
		jq(obj).hide();
		jq('.keyworditem').show();
	}
	
	
</script>
						
